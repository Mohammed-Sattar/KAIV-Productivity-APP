http://www.plantuml.com/plantuml/uml/ZPPRR-is3CVV_Ic8lCnd9pd0NeqYQBjq5o0TYbwmPyLYOw6sv4bqi-potOzanewiEa1VYeRya_o9faLVEnAMkgREiXzWWwzA8r25yElBxr3MmZauAAgWGQgCTF1gJTFx7VxLeIuHf19xAvgCnI7itmpWAxZA7BPch_I3s6F-fO1te-JekHSdH-VG5l3Y_wQIdoqAmjlQb6-pAUwaehDt5_uhe3VCPzgWaBF9f79jBOvtrXgRD-YS5nJmH5Rf_Q3xFsbF09xhZz0I1FdGNKVek2ai3brPGJYk5isOlpUsNdGmLaR6ho0wNqUJAWNrk3jZQXGw9U4JnoXZUQPXiW65rSpoWMDNY_AjLeuAsFg_L-nQzxv3fGWl-4JRkgaPE5yeXlAcRUjm36Nqh2oel3s0yID3-iEZvJ7Vv94YtGRIa2c_m9pe_mpqlJuznxpU8xkSZpMZOamXvSlZzjdS3WHvP-kHTwhfwyzhk4jHZqBTHEB4EuR-v47wV6p7jYn18WbLkp5WQ6Gy9aA3s3coeYJsnjDo6X0W4mxUZnJv2jaOmUBjUMue0XWQ5g3os14tDCHEdV1XZ1zExq34ftI5Lf7NyxKJN3p6KpN-JQXbX1YzKGdc49V7WXGtJlvH20duishmKUWzVeeybi-Zz_TnK1MzjhTvJMpXipmDmZm9IMRvZeFpE4cicIAboPRJuZDFRYDKVTogHj7dEX3hvrj0lj0z2jTPR53Jv8wIOtG1IjCuVzEG_4AAf3LdbBmUKqQQXFLIrcLADTEbc_Drhep-3UjsM23Sbda1hrBbWjDOzG_AQ64kGPH1Es14Io9TQ_UyrJwxtOPLEG5au-NjaTvDyvlg5-lZE6_yCL4QBPDFYKZE5UCL7v-mDspu7io_JCfQh7dlLAezhSEk9XNkMaN7B7ojh5Rhlfl33yxFlwpQLnHC8qh62tJnqm9-NArWqGXzNF3i5k0FGK9f1-iiP8HltzRpZxK8tm51rWTU_USpnPTEP8xUpTYU36OsFfkLD0UzMWz4Yr1daMNNg6NunliE



@startuml
class GUI {
  + showLoginPage(): void
  + showMainPage(user: User): void
  + showCreateBlockPage(): void
  + showEditBlockPage(block: Block): void
  + showCreateDeadlockPage(): void
  + displayError(message: String): void
}

class User {
  - username: String
  - password: String
  + authenticate(): boolean
}

class Block {
  - name: String
  - blacklist: List<String>
  - whitelist: List<String>
  - apps: List<String>
  - blockedApplications: List<String>
  - lock: Lock
  + setName(name: String): void
  + setBlackList(blacklist: List<String>): void
  + setWhiteList(whitelist: List<String>): void
  + setApps(apps: List<String>): void
  + addURLToBlacklist(url: String): void
  + addURLToWhitelist(url: String): void
  + blockApplication(app: String): void
  + saveLock(lockType: String, details: String): Lock
  + startBlock(): void
  + stopBlock(): void
  + deleteBlock(): void
  + renameBlock(newName: String): void
  + unlockBlock(): void
  + lockBlock(): void
  + addURL(url: String): void
}

class EditCurrentBlocksPage {
  + openBlockImplementationWindow(block: Block): void
}

class AuthenticationChecker {
  + isLocked(block: Block): boolean
  + checkLockType(block: Block): String
  + isBlockRunning(block: Block): boolean
  + requestPassword(): void
  + displayErrorMessage(message: String): void
  + displayGetHelpLink(): void
}

class Lock {
  - type: String
  + setType(type: String): void
  + Lock(type: String)
}

class PasswordLock {
  - password: String
  + setPassword(password: String): void
  + PasswordLock(password: String)
}

class TimeRangeLock {
  - startTime: Time
  - endTime: Time
  + setStartTime(startTime: Time): void
  + setEndTime(endTime: Time): void
  + TimeRangeLock(startTime: Time, endTime: Time)
}

class DailyLimitLock {
  - timeMeasurement: String
  - dailyLimit: int
  {methods}
  + setTimeMeasurement(timeMeasurement: String): void
  + setDailyLimit(limit: int): void
  + DailyLimitLock(timeMeasurement: String, dailyLimit: int)
}

class AuthenticationHelper {
  + isAuthorized(user: User, action: String): boolean
  + displayErrorMessage(message: String): void
}

class Deadlock {
  - name: String
  - lockType: String
}

class BlockFrame {
  + displayBlockDetails()
}

GUI --> User
GUI --> Block
GUI -right-> BlockFrame
Block "1" *-- "many" Lock : contains >
User ..> AuthenticationHelper : uses >
Lock <|-- PasswordLock
Lock <|-- TimeRangeLock
Lock <|-- DailyLimitLock
BlockFrame *-- Block : contains >

Block --> EditCurrentBlocksPage
Block --> AuthenticationChecker
User -- AuthenticationChecker : uses
@enduml